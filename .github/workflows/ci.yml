name: CampusPulse CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'
  FLUTTER_VERSION: '3.16.0'

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        cd CampusPulse/backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/testdb
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret-key
      run: |
        cd CampusPulse/backend
        pytest tests/ -v --cov=app --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./CampusPulse/backend/coverage.xml
        flags: backend

  dashboard-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: CampusPulse/dashboard/package-lock.json
    
    - name: Install dependencies
      run: |
        cd CampusPulse/dashboard
        npm ci
    
    - name: Run linter
      run: |
        cd CampusPulse/dashboard
        npm run lint
    
    - name: Run tests
      run: |
        cd CampusPulse/dashboard
        npm run test:coverage
    
    - name: Build
      run: |
        cd CampusPulse/dashboard
        npm run build
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./CampusPulse/dashboard/coverage/lcov.info
        flags: dashboard

  mobile-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
    
    - name: Get dependencies
      run: |
        cd CampusPulse/mobile
        flutter pub get
    
    - name: Run analyzer
      run: |
        cd CampusPulse/mobile
        flutter analyze
    
    - name: Run tests
      run: |
        cd CampusPulse/mobile
        flutter test --coverage
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./CampusPulse/mobile/coverage/lcov.info
        flags: mobile

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  build-and-deploy:
    needs: [backend-tests, dashboard-tests, mobile-tests]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./CampusPulse/backend
        file: ./CampusPulse/backend/Dockerfile
        push: true
        tags: campuspulse/backend:latest,campuspulse/backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push dashboard image
      uses: docker/build-push-action@v5
      with:
        context: ./CampusPulse/dashboard
        file: ./CampusPulse/dashboard/Dockerfile
        push: true
        tags: campuspulse/dashboard:latest,campuspulse/dashboard:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  notify-deployment:
    needs: [build-and-deploy]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify deployment
      run: |
        echo "ðŸš€ CampusPulse deployment completed successfully!"
        echo "Backend image: campuspulse/backend:${{ github.sha }}"
        echo "Dashboard image: campuspulse/dashboard:${{ github.sha }}"