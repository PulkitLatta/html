# Dashboard Dockerfile - React Application with Nginx
FROM node:18-alpine AS builder

LABEL maintainer="CampusPulse Team <tech@campuspulse.com>"
LABEL description="CampusPulse Dashboard - React frontend with Tailwind CSS"

# Set working directory
WORKDIR /app

# Copy package files
COPY dashboard/package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY dashboard/ .

# Build the application
RUN npm run build

# Production stage with Nginx
FROM nginx:alpine

# Install curl for health checks
RUN apk add --no-cache curl

# Copy built application from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy custom nginx configuration
COPY nginx/dashboard.conf /etc/nginx/conf.d/default.conf

# Create nginx user and set permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80/ || exit 1

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

# Note: In a real deployment, you would:
# 1. Configure proper nginx.conf for SPA routing
# 2. Add security headers
# 3. Enable gzip compression
# 4. Set up SSL/TLS certificates
# 5. Configure caching policies