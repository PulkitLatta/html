# Mobile Dockerfile - Development/Testing Environment
# Note: This is primarily for CI/CD testing and development support
# Mobile apps are typically built and distributed through app stores

FROM ubuntu:22.04

LABEL maintainer="CampusPulse Team <tech@campuspulse.com>"
LABEL description="CampusPulse Mobile Development Environment - Flutter with Android SDK"

# Prevent interactive prompts during package installation
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    wget \
    unzip \
    xz-utils \
    zip \
    libglu1-mesa \
    openjdk-11-jdk \
    && rm -rf /var/lib/apt/lists/*

# Set JAVA_HOME
ENV JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"

# Install Flutter
ENV FLUTTER_VERSION=3.16.0
ENV FLUTTER_HOME="/opt/flutter"
ENV PATH="$FLUTTER_HOME/bin:$PATH"

RUN wget -O flutter.tar.xz https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz \
    && tar xf flutter.tar.xz -C /opt \
    && rm flutter.tar.xz

# Pre-download Dart SDK
RUN flutter precache

# Install Android SDK (for building APKs in CI)
ENV ANDROID_SDK_ROOT="/opt/android-sdk"
ENV ANDROID_HOME="$ANDROID_SDK_ROOT"
ENV PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH"

RUN mkdir -p $ANDROID_SDK_ROOT/cmdline-tools \
    && wget -O sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip \
    && unzip sdk-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools \
    && mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest \
    && rm sdk-tools.zip

# Accept Android licenses and install required SDK components
RUN yes | sdkmanager --licenses \
    && sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0"

# Set working directory
WORKDIR /app

# Copy pubspec files for dependency caching
COPY mobile/pubspec.yaml mobile/pubspec.lock ./

# Install Flutter dependencies
RUN flutter pub get

# Copy the rest of the mobile app code
COPY mobile/ .

# Run flutter doctor to verify setup
RUN flutter doctor -v

# Default command for development
CMD ["flutter", "test"]

# Usage examples:
# - Testing: docker run --rm campuspulse-mobile flutter test
# - Analysis: docker run --rm campuspulse-mobile flutter analyze
# - Build APK: docker run --rm -v $(pwd)/build:/app/build campuspulse-mobile flutter build apk
# - Format code: docker run --rm -v $(pwd):/app campuspulse-mobile dart format .

# Notes for production mobile deployment:
# 1. Mobile apps are distributed through app stores (Google Play, Apple App Store)
# 2. This Docker image is primarily for CI/CD testing and development
# 3. For production builds, use dedicated CI/CD services like:
#    - GitHub Actions with Flutter action
#    - GitLab CI with Flutter Docker image
#    - Bitrise, Codemagic, or similar mobile CI/CD platforms
# 4. Code signing and app store deployment require additional security considerations